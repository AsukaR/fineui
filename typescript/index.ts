import { _base } from "./core/base";
import * as decorator from "./core/decorator/decorator";
import { _func } from "./core/func";
import { _i18n } from "./core/i18n";
import { OB } from "./core/ob";
import { Widget } from "./core/widget";
import { Single } from "./base/single/single";
import { BasicButton } from "./base/single/button/button.basic";
import { Checkbox } from "./base/single/input/checkbox";
import { Button } from "./base/single/button/buttons/button";
import { TextButton } from "./base/single/button/buttons/button.text";
import { IconChangeButton } from "./case/button/icon/icon.change";
import { Trigger } from "./base/single/trigger/trigger";
import { Action, ActionFactory } from "./core/action/action";
import { ShowAction } from "./core/action/action.show";
import { Behavior, BehaviorFactory } from "./core/behavior/behavior";
import { HighlightBehavior } from "./core/behavior/behavior.highlight";
import { RedMarkBehavior } from "./core/behavior/behavior.redmark";
import { Pane } from "./base/pane";
import { LoadingPane } from "./case/loading/loading_pane";
import { Tab } from "./base/combination/tab";
import { ButtonGroup } from "./base/combination/group.button";
import { Combo } from "./base/combination/combo";
import { TextValueCombo } from "./case/combo/combo.textvalue";
import { BubbleCombo } from "./case/combo/bubblecombo/combo.bubble";
import { AllValueMultiTextValueCombo } from "./component/allvaluemultitextvaluecombo/allvalue.multitextvalue.combo";
import { IconTextItem } from "./base/single/button/listitem/icontextitem";
import { MultiSelectItem } from "./case/button/item.multiselect";
import { AbstractLabel } from "./base/single/label/abstract.label";
import { Label } from "./base/single/label/label";
import { Editor } from "./base/single/editor/editor";
import { SignEditor } from "./case/editor/editor.sign";
import { Layout } from "./core/wrapper/layout";
import { HTapeLayout, VTapeLayout } from "./core/wrapper/layout/layout.tape";

export interface BI extends _func, _i18n, _base {
    OB: typeof OB;
    Widget: typeof Widget;
    Single: typeof Single;
    BasicButton: typeof BasicButton;
    Checkbox: typeof Checkbox;
    Button: typeof Button;
    TextButton: typeof TextButton;
    IconChangeButton: typeof IconChangeButton;
    Trigger: typeof Trigger;
    Action: typeof Action;
    ActionFactory: typeof ActionFactory;
    ShowAction: typeof ShowAction;
    Behavior: typeof Behavior;
    BehaviorFactory: typeof BehaviorFactory;
    HighlightBehavior: typeof HighlightBehavior;
    RedMarkBehavior: typeof RedMarkBehavior;
    Pane: typeof Pane;
    LoadingPane: typeof LoadingPane;
    Tab: typeof Tab;
    ButtonGroup: typeof ButtonGroup;
    Combo: typeof Combo;
    TextValueCombo: typeof TextValueCombo;
    BubbleCombo: typeof BubbleCombo;
    AllValueMultiTextValueCombo: typeof AllValueMultiTextValueCombo;
    IconTextItem: typeof IconTextItem;
    MultiSelectItem: typeof MultiSelectItem;
    AbstractLabel: typeof AbstractLabel;
    Label: typeof Label;
    Text: typeof Text;
    Editor: typeof Editor;
    SignEditor: typeof SignEditor;
    Layout: typeof Layout;
    HTapeLayout: typeof HTapeLayout;
    VTapeLayout: typeof VTapeLayout;
    Decorators: typeof decorator;
}

export default {
    Decorators: decorator,
};
